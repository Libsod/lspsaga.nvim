Для коммита 8 (feat(hover): extract links from content and display in separate section):

Добавить перед проверкой self.bufnr:

    do
      local processed_lines = {}
      local extracted_links = {}
      local markdown_link_pattern = '%[([^%]]*)%]%(([^%)]*)%)'

      -- Улучшенная обработка markdown ссылок
      for _, line in ipairs(content) do
        local stripped_line = line
        local links_in_line = {}

        -- Находим все ссылки в строке
        for text, url in string.gmatch(line, markdown_link_pattern) do
          table.insert(extracted_links, { text = text, url = url })
          table.insert(links_in_line, { text = text, url = url })
        end

        -- Заменяем ссылки на их текст
        if #links_in_line > 0 then
          for _, link_info in ipairs(links_in_line) do
            local escaped_text = link_info.text:gsub('([%(%)%.%%%+%-%*%?%[%^%$])', '%%%1')
            local escaped_url = link_info.url:gsub('([%(%)%.%%%+%-%*%?%[%^%$])', '%%%1')
            local pattern = '%[' .. escaped_text .. '%]%(' .. escaped_url .. '%)'
            stripped_line = string.gsub(stripped_line, pattern, link_info.text)
          end
        end

        table.insert(processed_lines, stripped_line)
      end

      -- Добавляем секцию ссылок, если они есть
      if #extracted_links > 0 then
        -- Добавляем пустую строку перед разделителем, если последняя строка не пустая
        if #processed_lines > 0 and processed_lines[#processed_lines] ~= '' then
          table.insert(processed_lines, '')
        end
        table.insert(processed_lines, '---')
        table.insert(processed_lines, 'Links:')

        -- Добавляем ссылки в формате списка
        for i, link_info in ipairs(extracted_links) do
          local escaped_text = vim.fn.escape(link_info.text, '[]()')
          table.insert(
            processed_lines,
            string.format('%d. [%s](%s)', i, escaped_text, link_info.url)
          )
        end
      end

      content = processed_lines
    end